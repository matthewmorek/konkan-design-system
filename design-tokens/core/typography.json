{
  "fontSizeConstants": {
    "min": {
      "baseFontSize": {
        "value": "{layoutConstants.baselineGridUnit}*4.5",
        "type": "fontSizes",
        "description": "Base font-size minimum"
      },
      "r": {
        "value": "2.1125",
        "type": "fontSizes",
        "description": "Font scale ratio minimum"
      },
      "n": {
        "value": "6",
        "type": "fontSizes",
        "description": "Number of heading sizes "
      }
    },
    "max": {
      "baseFontSize": {
        "value": "{layoutConstants.baselineGridUnit}*4.5",
        "type": "fontSizes",
        "description": "Base font-size maximum"
      },
      "r": {
        "value": "2.1125",
        "type": "fontSizes",
        "description": "Font scale ratio maximum"
      },
      "n": {
        "value": "6",
        "type": "fontSizes",
        "description": "Number of heading sizes"
      }
    }
  },
  "fontScale": {
    "0": {
      "min": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.min.baseFontSize}*{fontSizeConstants.min.r}^(-4/{fontSizeConstants.min.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "max": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.max.baseFontSize}*{fontSizeConstants.max.r}^(-4/{fontSizeConstants.max.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "v": {
        "value": "100 * ({fontScale.0.max}-{fontScale.0.min}) / ({breakpoint.viewport.max}-{breakpoint.viewport.min})",
        "type": "fontSizes"
      },
      "r": {
        "value": "( {breakpoint.viewport.min} * {fontScale.0.max} - {breakpoint.viewport.max} * {fontScale.0.min}) / ({breakpoint.viewport.min}-{breakpoint.viewport.max})",
        "type": "fontSizes"
      },
      "fluid": {
        "value": "round(({breakpoint.viewport.width}/100) * {fontScale.0.v} + {fontScale.0.r})",
        "type": "fontSizes"
      }
    },
    "25": {
      "min": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.min.baseFontSize}*{fontSizeConstants.min.r}^(-3/{fontSizeConstants.min.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "max": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.max.baseFontSize}*{fontSizeConstants.max.r}^(-3/{fontSizeConstants.max.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "v": {
        "value": "100 * ({fontScale.25.max}-{fontScale.25.min}) / ({breakpoint.viewport.max}-{breakpoint.viewport.min})",
        "type": "fontSizes"
      },
      "r": {
        "value": "( {breakpoint.viewport.min} * {fontScale.25.max} - {breakpoint.viewport.max} * {fontScale.25.min}) / ({breakpoint.viewport.min}-{breakpoint.viewport.max})",
        "type": "fontSizes"
      },
      "fluid": {
        "value": "round(({breakpoint.viewport.width}/100) * {fontScale.25.v} + {fontScale.25.r})",
        "type": "fontSizes"
      }
    },
    "50": {
      "min": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.min.baseFontSize}*{fontSizeConstants.min.r}^(-2/{fontSizeConstants.min.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "max": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.max.baseFontSize}*{fontSizeConstants.max.r}^(-2/{fontSizeConstants.max.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "v": {
        "value": "100 * ({fontScale.50.max}-{fontScale.50.min}) / ({breakpoint.viewport.max}-{breakpoint.viewport.min})",
        "type": "fontSizes"
      },
      "r": {
        "value": "( {breakpoint.viewport.min} * {fontScale.50.max} - {breakpoint.viewport.max} * {fontScale.50.min}) / ({breakpoint.viewport.min}-{breakpoint.viewport.max})",
        "type": "fontSizes"
      },
      "fluid": {
        "value": "round(({breakpoint.viewport.width}/100) * {fontScale.50.v} + {fontScale.50.r})",
        "type": "fontSizes"
      }
    },
    "75": {
      "min": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.min.baseFontSize}*{fontSizeConstants.min.r}^(-1/{fontSizeConstants.min.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "max": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.max.baseFontSize}*{fontSizeConstants.max.r}^(-1/{fontSizeConstants.max.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "v": {
        "value": "100 * ({fontScale.75.max}-{fontScale.75.min}) / ({breakpoint.viewport.max}-{breakpoint.viewport.min})",
        "type": "fontSizes"
      },
      "r": {
        "value": "( {breakpoint.viewport.min} * {fontScale.75.max} - {breakpoint.viewport.max} * {fontScale.75.min}) / ({breakpoint.viewport.min}-{breakpoint.viewport.max})",
        "type": "fontSizes"
      },
      "fluid": {
        "value": "round(({breakpoint.viewport.width}/100) * {fontScale.75.v} + {fontScale.75.r})",
        "type": "fontSizes"
      }
    },
    "100": {
      "min": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.min.baseFontSize}*{fontSizeConstants.min.r}^(0/{fontSizeConstants.min.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "max": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.max.baseFontSize}*{fontSizeConstants.max.r}^(0/{fontSizeConstants.max.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "v": {
        "value": "100 * ({fontScale.100.max}-{fontScale.100.min}) / ({breakpoint.viewport.max}-{breakpoint.viewport.min})",
        "type": "fontSizes"
      },
      "r": {
        "value": "( {breakpoint.viewport.min} * {fontScale.100.max} - {breakpoint.viewport.max} * {fontScale.100.min}) / ({breakpoint.viewport.min}-{breakpoint.viewport.max})",
        "type": "fontSizes"
      },
      "fluid": {
        "value": "round(({breakpoint.viewport.width}/100) * {fontScale.100.v} + {fontScale.100.r})",
        "type": "fontSizes"
      }
    },
    "200": {
      "min": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.min.baseFontSize}*{fontSizeConstants.min.r}^(1/{fontSizeConstants.min.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "max": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.max.baseFontSize}*{fontSizeConstants.max.r}^(1/{fontSizeConstants.max.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "v": {
        "value": "100 * ({fontScale.200.max}-{fontScale.200.min}) / ({breakpoint.viewport.max}-{breakpoint.viewport.min})",
        "type": "fontSizes"
      },
      "r": {
        "value": "( {breakpoint.viewport.min} * {fontScale.200.max} - {breakpoint.viewport.max} * {fontScale.200.min}) / ({breakpoint.viewport.min}-{breakpoint.viewport.max})",
        "type": "fontSizes"
      },
      "fluid": {
        "value": "round(({breakpoint.viewport.width}/100) * {fontScale.200.v} + {fontScale.200.r})",
        "type": "fontSizes"
      }
    },
    "300": {
      "min": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.min.baseFontSize}*{fontSizeConstants.min.r}^(2/{fontSizeConstants.min.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "max": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.max.baseFontSize}*{fontSizeConstants.max.r}^(2/{fontSizeConstants.max.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "v": {
        "value": "100 * ({fontScale.300.max}-{fontScale.300.min}) / ({breakpoint.viewport.max}-{breakpoint.viewport.min})",
        "type": "fontSizes"
      },
      "r": {
        "value": "( {breakpoint.viewport.min} * {fontScale.300.max} - {breakpoint.viewport.max} * {fontScale.300.min}) / ({breakpoint.viewport.min}-{breakpoint.viewport.max})",
        "type": "fontSizes"
      },
      "fluid": {
        "value": "round(({breakpoint.viewport.width}/100) * {fontScale.300.v} + {fontScale.300.r})",
        "type": "fontSizes"
      }
    },
    "400": {
      "min": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.min.baseFontSize}*{fontSizeConstants.min.r}^(3/{fontSizeConstants.min.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "max": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.max.baseFontSize}*{fontSizeConstants.max.r}^(3/{fontSizeConstants.max.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "v": {
        "value": "100 * ({fontScale.400.max}-{fontScale.400.min}) / ({breakpoint.viewport.max}-{breakpoint.viewport.min})",
        "type": "fontSizes"
      },
      "r": {
        "value": "( {breakpoint.viewport.min} * {fontScale.400.max} - {breakpoint.viewport.max} * {fontScale.400.min}) / ({breakpoint.viewport.min}-{breakpoint.viewport.max})",
        "type": "fontSizes"
      },
      "fluid": {
        "value": "round(({breakpoint.viewport.width}/100) * {fontScale.400.v} + {fontScale.400.r})",
        "type": "fontSizes"
      }
    },
    "500": {
      "min": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.min.baseFontSize}*{fontSizeConstants.min.r}^(4/{fontSizeConstants.min.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "max": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.max.baseFontSize}*{fontSizeConstants.max.r}^(4/{fontSizeConstants.max.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "v": {
        "value": "100 * ({fontScale.500.max}-{fontScale.500.min}) / ({breakpoint.viewport.max}-{breakpoint.viewport.min})",
        "type": "fontSizes"
      },
      "r": {
        "value": "( {breakpoint.viewport.min} * {fontScale.500.max} - {breakpoint.viewport.max} * {fontScale.500.min}) / ({breakpoint.viewport.min}-{breakpoint.viewport.max})",
        "type": "fontSizes"
      },
      "fluid": {
        "value": "round(({breakpoint.viewport.width}/100) * {fontScale.500.v} + {fontScale.500.r})",
        "type": "fontSizes"
      }
    },
    "600": {
      "min": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.min.baseFontSize}*{fontSizeConstants.min.r}^(5/{fontSizeConstants.min.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "max": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.max.baseFontSize}*{fontSizeConstants.max.r}^(5/{fontSizeConstants.max.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "v": {
        "value": "100 * ({fontScale.600.max}-{fontScale.600.min}) / ({breakpoint.viewport.max}-{breakpoint.viewport.min})",
        "type": "fontSizes"
      },
      "r": {
        "value": "( {breakpoint.viewport.min} * {fontScale.600.max} - {breakpoint.viewport.max} * {fontScale.600.min}) / ({breakpoint.viewport.min}-{breakpoint.viewport.max})",
        "type": "fontSizes"
      },
      "fluid": {
        "value": "round(({breakpoint.viewport.width}/100) * {fontScale.600.v} + {fontScale.600.r})",
        "type": "fontSizes"
      }
    },
    "700": {
      "min": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.min.baseFontSize}*{fontSizeConstants.min.r}^(6/{fontSizeConstants.min.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "max": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.max.baseFontSize}*{fontSizeConstants.max.r}^(6/{fontSizeConstants.max.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "v": {
        "value": "100 * ({fontScale.700.max}-{fontScale.700.min}) / ({breakpoint.viewport.max}-{breakpoint.viewport.min})",
        "type": "fontSizes"
      },
      "r": {
        "value": "( {breakpoint.viewport.min} * {fontScale.700.max} - {breakpoint.viewport.max} * {fontScale.700.min}) / ({breakpoint.viewport.min}-{breakpoint.viewport.max})",
        "type": "fontSizes"
      },
      "fluid": {
        "value": "round(({breakpoint.viewport.width}/100) * {fontScale.700.v} + {fontScale.700.r})",
        "type": "fontSizes"
      }
    },
    "800": {
      "min": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.min.baseFontSize}*{fontSizeConstants.min.r}^(7/{fontSizeConstants.min.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "max": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.max.baseFontSize}*{fontSizeConstants.max.r}^(7/{fontSizeConstants.max.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "v": {
        "value": "100 * ({fontScale.800.max}-{fontScale.800.min}) / ({breakpoint.viewport.max}-{breakpoint.viewport.min})",
        "type": "fontSizes"
      },
      "r": {
        "value": "( {breakpoint.viewport.min} * {fontScale.800.max} - {breakpoint.viewport.max} * {fontScale.800.min}) / ({breakpoint.viewport.min}-{breakpoint.viewport.max})",
        "type": "fontSizes"
      },
      "fluid": {
        "value": "round(({breakpoint.viewport.width}/100) * {fontScale.800.v} + {fontScale.800.r})",
        "type": "fontSizes"
      }
    },
    "900": {
      "min": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.min.baseFontSize}*{fontSizeConstants.min.r}^(8/{fontSizeConstants.min.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "max": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.max.baseFontSize}*{fontSizeConstants.max.r}^(8/{fontSizeConstants.max.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "v": {
        "value": "100 * ({fontScale.900.max}-{fontScale.900.min}) / ({breakpoint.viewport.max}-{breakpoint.viewport.min})",
        "type": "fontSizes"
      },
      "r": {
        "value": "( {breakpoint.viewport.min} * {fontScale.900.max} - {breakpoint.viewport.max} * {fontScale.900.min}) / ({breakpoint.viewport.min}-{breakpoint.viewport.max})",
        "type": "fontSizes"
      },
      "fluid": {
        "value": "round(({breakpoint.viewport.width}/100) * {fontScale.900.v} + {fontScale.900.r})",
        "type": "fontSizes"
      }
    },
    "1000": {
      "min": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.min.baseFontSize}*{fontSizeConstants.min.r}^(9/{fontSizeConstants.min.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "max": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.max.baseFontSize}*{fontSizeConstants.max.r}^(9/{fontSizeConstants.max.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "v": {
        "value": "100 * ({fontScale.1000.max}-{fontScale.1000.min}) / ({breakpoint.viewport.max}-{breakpoint.viewport.min})",
        "type": "fontSizes"
      },
      "r": {
        "value": "( {breakpoint.viewport.min} * {fontScale.1000.max} - {breakpoint.viewport.max} * {fontScale.1000.min}) / ({breakpoint.viewport.min}-{breakpoint.viewport.max})",
        "type": "fontSizes"
      },
      "fluid": {
        "value": "round(({breakpoint.viewport.width}/100) * {fontScale.1000.v} + {fontScale.1000.r})",
        "type": "fontSizes"
      }
    },
    "1100": {
      "min": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.min.baseFontSize}*{fontSizeConstants.min.r}^(10/{fontSizeConstants.min.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "max": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.max.baseFontSize}*{fontSizeConstants.max.r}^(10/{fontSizeConstants.max.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "v": {
        "value": "100 * ({fontScale.1100.max}-{fontScale.1100.min}) / ({breakpoint.viewport.max}-{breakpoint.viewport.min})",
        "type": "fontSizes"
      },
      "r": {
        "value": "( {breakpoint.viewport.min} * {fontScale.1100.max} - {breakpoint.viewport.max} * {fontScale.1100.min}) / ({breakpoint.viewport.min}-{breakpoint.viewport.max})",
        "type": "fontSizes"
      },
      "fluid": {
        "value": "round(({breakpoint.viewport.width}/100) * {fontScale.1100.v} + {fontScale.1100.r})",
        "type": "fontSizes"
      }
    },
    "1200": {
      "min": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.min.baseFontSize}*{fontSizeConstants.min.r}^(11/{fontSizeConstants.min.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "max": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.max.baseFontSize}*{fontSizeConstants.max.r}^(11/{fontSizeConstants.max.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "v": {
        "value": "100 * ({fontScale.1200.max}-{fontScale.1200.min}) / ({breakpoint.viewport.max}-{breakpoint.viewport.min})",
        "type": "fontSizes"
      },
      "r": {
        "value": "( {breakpoint.viewport.min} * {fontScale.1200.max} - {breakpoint.viewport.max} * {fontScale.1200.min}) / ({breakpoint.viewport.min}-{breakpoint.viewport.max})",
        "type": "fontSizes"
      },
      "fluid": {
        "value": "round(({breakpoint.viewport.width}/100) * {fontScale.1200.v} + {fontScale.1200.r})",
        "type": "fontSizes"
      }
    },
    "1300": {
      "min": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.min.baseFontSize}*{fontSizeConstants.min.r}^(12/{fontSizeConstants.min.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "max": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.max.baseFontSize}*{fontSizeConstants.max.r}^(12/{fontSizeConstants.max.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "v": {
        "value": "100 * ({fontScale.1300.max}-{fontScale.1300.min}) / ({breakpoint.viewport.max}-{breakpoint.viewport.min})",
        "type": "fontSizes"
      },
      "r": {
        "value": "( {breakpoint.viewport.min} * {fontScale.1300.max} - {breakpoint.viewport.max} * {fontScale.1300.min}) / ({breakpoint.viewport.min}-{breakpoint.viewport.max})",
        "type": "fontSizes"
      },
      "fluid": {
        "value": "round(({breakpoint.viewport.width}/100) * {fontScale.1300.v} + {fontScale.1300.r})",
        "type": "fontSizes"
      }
    },
    "1400": {
      "min": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.min.baseFontSize}*{fontSizeConstants.min.r}^(13/{fontSizeConstants.min.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "max": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.max.baseFontSize}*{fontSizeConstants.max.r}^(13/{fontSizeConstants.max.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "v": {
        "value": "100 * ({fontScale.1400.max}-{fontScale.1400.min}) / ({breakpoint.viewport.max}-{breakpoint.viewport.min})",
        "type": "fontSizes"
      },
      "r": {
        "value": "( {breakpoint.viewport.min} * {fontScale.1400.max} - {breakpoint.viewport.max} * {fontScale.1400.min}) / ({breakpoint.viewport.min}-{breakpoint.viewport.max})",
        "type": "fontSizes"
      },
      "fluid": {
        "value": "round(({breakpoint.viewport.width}/100) * {fontScale.1400.v} + {fontScale.1400.r})",
        "type": "fontSizes"
      }
    },
    "1500": {
      "min": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.min.baseFontSize}*{fontSizeConstants.min.r}^(14/{fontSizeConstants.min.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "max": {
        "value": "{layoutConstants.roundingUnit}*roundTo(({fontSizeConstants.max.baseFontSize}*{fontSizeConstants.max.r}^(14/{fontSizeConstants.max.n})/{layoutConstants.roundingUnit}))",
        "type": "fontSizes"
      },
      "v": {
        "value": "100 * ({fontScale.1500.max}-{fontScale.1500.min}) / ({breakpoint.viewport.max}-{breakpoint.viewport.min})",
        "type": "fontSizes"
      },
      "r": {
        "value": "( {breakpoint.viewport.min} * {fontScale.1500.max} - {breakpoint.viewport.max} * {fontScale.1500.min}) / ({breakpoint.viewport.min}-{breakpoint.viewport.max})",
        "type": "fontSizes"
      },
      "fluid": {
        "value": "round(({breakpoint.viewport.width}/100) * {fontScale.1500.v} + {fontScale.1500.r})",
        "type": "fontSizes"
      }
    }
  },
  "fontSize": {
    "0": {
      "value": "min( max( {fontScale.0.min},  {fontScale.0.fluid}) ,{fontScale.0.max})",
      "type": "fontSizes"
    },
    "25": {
      "value": "min( max( {fontScale.25.min},  {fontScale.25.fluid}) ,{fontScale.25.max})",
      "type": "fontSizes"
    },
    "50": {
      "value": "min( max( {fontScale.50.min},  {fontScale.50.fluid}) ,{fontScale.50.max})",
      "type": "fontSizes"
    },
    "75": {
      "value": "min( max( {fontScale.75.min},  {fontScale.75.fluid}) ,{fontScale.75.max})",
      "type": "fontSizes"
    },
    "100": {
      "value": "min( max( {fontScale.100.min},  {fontScale.100.fluid}) ,{fontScale.100.max})",
      "type": "fontSizes"
    },
    "200": {
      "value": "min( max( {fontScale.200.min},  {fontScale.200.fluid}) ,{fontScale.200.max})",
      "type": "fontSizes"
    },
    "300": {
      "value": "min( max( {fontScale.300.min},  {fontScale.300.fluid}) ,{fontScale.300.max})",
      "type": "fontSizes"
    },
    "400": {
      "value": "min( max( {fontScale.400.min},  {fontScale.400.fluid}) ,{fontScale.400.max})",
      "type": "fontSizes"
    },
    "500": {
      "value": "min( max( {fontScale.500.min},  {fontScale.500.fluid}) ,{fontScale.500.max})",
      "type": "fontSizes"
    },
    "600": {
      "value": "min( max( {fontScale.600.min},  {fontScale.600.fluid}) ,{fontScale.600.max})",
      "type": "fontSizes"
    },
    "700": {
      "value": "min( max( {fontScale.700.min},  {fontScale.700.fluid}) ,{fontScale.700.max})",
      "type": "fontSizes"
    },
    "800": {
      "value": "min( max( {fontScale.800.min},  {fontScale.800.fluid}) ,{fontScale.800.max})",
      "type": "fontSizes"
    },
    "900": {
      "value": "min( max( {fontScale.900.min},  {fontScale.900.fluid}) ,{fontScale.900.max})",
      "type": "fontSizes"
    },
    "1000": {
      "value": "min( max( {fontScale.1000.min},  {fontScale.1000.fluid}) ,{fontScale.1000.max})",
      "type": "fontSizes"
    },
    "1100": {
      "value": "min( max( {fontScale.1100.min},  {fontScale.1100.fluid}) ,{fontScale.1100.max})",
      "type": "fontSizes"
    },
    "1200": {
      "value": "min( max( {fontScale.1200.min},  {fontScale.1200.fluid}) ,{fontScale.1200.max})",
      "type": "fontSizes"
    },
    "1300": {
      "value": "min( max( {fontScale.1300.min},  {fontScale.1300.fluid}) ,{fontScale.1300.max})",
      "type": "fontSizes"
    },
    "1400": {
      "value": "min( max( {fontScale.1400.min},  {fontScale.1400.fluid}) ,{fontScale.1400.max})",
      "type": "fontSizes"
    },
    "1500": {
      "value": "min( max( {fontScale.1500.min},  {fontScale.1500.fluid}) ,{fontScale.1500.max})",
      "type": "fontSizes"
    }
  },
  "lineHeightScale": {
    "relaxed": {
      "value": "1.5",
      "type": "lineHeights",
      "description": "For smaller body copy using styles like body and label, we recommend a line height ratio of 1.5 times the type size. This will also help people experiencing low vision conditions, as well as people with cognitive concerns such as Dyslexia."
    },
    "comfortable": {
      "value": "1.2",
      "type": "lineHeights",
      "description": "Typically used for larger type styles like title, headline, and display"
    },
    "compressed": {
      "value": "1.1",
      "type": "lineHeights"
    },
    "tight": {
      "value": "1",
      "type": "lineHeights"
    }
  },
  "fontFamily": {
    "plain": {
      "value": "Inter",
      "type": "fontFamilies",
      "description": "Typically used for title, body and label text styles."
    },
    "brand": {
      "value": "Inter",
      "type": "fontFamilies",
      "description": "Typically used for display and headline text styles"
    }
  },
  "fontWeight": {
    "regular": {
      "value": "400",
      "type": "fontWeights"
    },
    "semiBold": {
      "value": "600",
      "type": "fontWeights"
    },
    "bold": {
      "value": "700",
      "type": "fontWeights"
    }
  },
  "textDecoration": {
    "underline": {
      "value": "underline",
      "type": "textDecoration"
    },
    "none": {
      "value": "none",
      "type": "textDecoration"
    }
  },
  "letterSpacing": {
    "0": {
      "value": "({letterSpacingConstants.fontProportion}*{fontSize.0}+{letterSpacingConstants.constant} / {fontSize.0} )",
      "type": "letterSpacing"
    },
    "25": {
      "value": "({letterSpacingConstants.fontProportion}*{fontSize.25}+{letterSpacingConstants.constant} / {fontSize.25} )",
      "type": "letterSpacing"
    },
    "50": {
      "value": "({letterSpacingConstants.fontProportion}*{fontSize.50}+{letterSpacingConstants.constant} / {fontSize.50} )",
      "type": "letterSpacing"
    },
    "75": {
      "value": "({letterSpacingConstants.fontProportion}*{fontSize.75}+{letterSpacingConstants.constant} / {fontSize.75} )",
      "type": "letterSpacing"
    },
    "100": {
      "value": "({letterSpacingConstants.fontProportion}*{fontSize.100}+{letterSpacingConstants.constant} / {fontSize.100} )",
      "type": "letterSpacing"
    },
    "200": {
      "value": "({letterSpacingConstants.fontProportion}*{fontSize.200}+{letterSpacingConstants.constant} / {fontSize.200} )",
      "type": "letterSpacing"
    },
    "300": {
      "value": "({letterSpacingConstants.fontProportion}*{fontSize.300}+{letterSpacingConstants.constant} / {fontSize.300} )",
      "type": "letterSpacing"
    },
    "400": {
      "value": "({letterSpacingConstants.fontProportion}*{fontSize.400}+{letterSpacingConstants.constant} / {fontSize.400} )",
      "type": "letterSpacing"
    },
    "500": {
      "value": "({letterSpacingConstants.fontProportion}*{fontSize.500}+{letterSpacingConstants.constant} / {fontSize.500} )",
      "type": "letterSpacing"
    },
    "600": {
      "value": "({letterSpacingConstants.fontProportion}*{fontSize.600}+{letterSpacingConstants.constant} / {fontSize.600} )",
      "type": "letterSpacing"
    },
    "700": {
      "value": "({letterSpacingConstants.fontProportion}*{fontSize.700}+{letterSpacingConstants.constant} / {fontSize.700} )",
      "type": "letterSpacing"
    },
    "800": {
      "value": "({letterSpacingConstants.fontProportion}*{fontSize.800}+{letterSpacingConstants.constant} / {fontSize.800} )",
      "type": "letterSpacing"
    },
    "900": {
      "value": "({letterSpacingConstants.fontProportion}*{fontSize.900}+{letterSpacingConstants.constant} / {fontSize.900} )",
      "type": "letterSpacing"
    },
    "1000": {
      "value": "({letterSpacingConstants.fontProportion}*{fontSize.1000}+{letterSpacingConstants.constant} / {fontSize.1000} )",
      "type": "letterSpacing"
    },
    "1100": {
      "value": "({letterSpacingConstants.fontProportion}*{fontSize.1100}+{letterSpacingConstants.constant} / {fontSize.1100} )",
      "type": "letterSpacing"
    },
    "1200": {
      "value": "({letterSpacingConstants.fontProportion}*{fontSize.1200}+{letterSpacingConstants.constant} / {fontSize.1200} )",
      "type": "letterSpacing"
    },
    "1300": {
      "value": "({letterSpacingConstants.fontProportion}*{fontSize.1300}+{letterSpacingConstants.constant} / {fontSize.1300} )",
      "type": "letterSpacing"
    },
    "1400": {
      "value": "({letterSpacingConstants.fontProportion}*{fontSize.1400}+{letterSpacingConstants.constant} / {fontSize.1400} )",
      "type": "letterSpacing"
    },
    "1500": {
      "value": "({letterSpacingConstants.fontProportion}*{fontSize.1500}+{letterSpacingConstants.constant} / {fontSize.1500} )",
      "type": "letterSpacing"
    }
  },
  "letterSpacingConstants": {
    "fontProportion": {
      "value": "0.01",
      "type": "letterSpacing",
      "description": "As the font size increases or decreases, the letter spacing should also adjust proportionally to maintain optimal legibility and visual appeal. \n\nThe value of 0.01 is considered a good starting point because it generally results in letter spacing that is legible for most font sizes.\n"
    },
    "constant": {
      "value": "0.1618",
      "type": "letterSpacing",
      "description": "Added to the calculated value of font-proportion * font size. \n\nEnsures that the resulting letter spacing value is not too tight, which can lead to reduced legibility, or too loose, which can affect the visual balance and overall aesthetics of the typography."
    }
  },
  "lineHeight": {
    "0": {
      "relaxed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.0}*{lineHeightScale.relaxed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "comfortable": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.0}*{lineHeightScale.comfortable} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "compressed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.0}*{lineHeightScale.compressed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "tight": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.0}*{lineHeightScale.tight} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      }
    },
    "25": {
      "relaxed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.25}*{lineHeightScale.relaxed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "comfortable": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.25}*{lineHeightScale.comfortable} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "compressed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.25}*{lineHeightScale.compressed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "tight": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.25}*{lineHeightScale.tight} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      }
    },
    "50": {
      "relaxed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.50}*{lineHeightScale.relaxed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "comfortable": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.50}*{lineHeightScale.comfortable} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "compressed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.50}*{lineHeightScale.compressed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "tight": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.50}*{lineHeightScale.tight} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      }
    },
    "75": {
      "relaxed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.75}*{lineHeightScale.relaxed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "comfortable": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.75}*{lineHeightScale.comfortable} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "compressed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.75}*{lineHeightScale.compressed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "tight": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.75}*{lineHeightScale.tight} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      }
    },
    "100": {
      "relaxed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.100}*{lineHeightScale.relaxed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "comfortable": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.100}*{lineHeightScale.comfortable} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "compressed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.100}*{lineHeightScale.compressed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "tight": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.100}*{lineHeightScale.tight} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      }
    },
    "200": {
      "relaxed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.200}*{lineHeightScale.relaxed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "comfortable": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.200}*{lineHeightScale.comfortable} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "compressed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.200}*{lineHeightScale.compressed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "tight": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.200}*{lineHeightScale.tight} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      }
    },
    "300": {
      "relaxed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.300}*{lineHeightScale.relaxed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "comfortable": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.300}*{lineHeightScale.comfortable} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "compressed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.300}*{lineHeightScale.compressed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "tight": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.300}*{lineHeightScale.tight} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      }
    },
    "400": {
      "relaxed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.400}*{lineHeightScale.relaxed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "comfortable": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.400}*{lineHeightScale.comfortable} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "compressed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.400}*{lineHeightScale.compressed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "tight": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.400}*{lineHeightScale.tight} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      }
    },
    "500": {
      "relaxed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.500}*{lineHeightScale.relaxed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "comfortable": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.500}*{lineHeightScale.comfortable} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "compressed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.500}*{lineHeightScale.compressed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "tight": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.500}*{lineHeightScale.tight} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      }
    },
    "600": {
      "relaxed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.600}*{lineHeightScale.relaxed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "comfortable": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.600}*{lineHeightScale.comfortable} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "compressed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.600}*{lineHeightScale.compressed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "tight": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.600}*{lineHeightScale.tight} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      }
    },
    "700": {
      "relaxed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.700}*{lineHeightScale.relaxed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "comfortable": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.700}*{lineHeightScale.comfortable} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "compressed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.700}*{lineHeightScale.compressed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "tight": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.700}*{lineHeightScale.tight} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      }
    },
    "800": {
      "relaxed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.800}*{lineHeightScale.relaxed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "comfortable": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.800}*{lineHeightScale.comfortable} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "compressed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.800}*{lineHeightScale.compressed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "tight": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.800}*{lineHeightScale.tight} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      }
    },
    "900": {
      "relaxed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.900}*{lineHeightScale.relaxed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "comfortable": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.900}*{lineHeightScale.comfortable} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "compressed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.900}*{lineHeightScale.compressed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "tight": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.900}*{lineHeightScale.tight} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      }
    },
    "1000": {
      "relaxed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1000}*{lineHeightScale.relaxed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "comfortable": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1000}*{lineHeightScale.comfortable} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "compressed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1000}*{lineHeightScale.compressed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "tight": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1000}*{lineHeightScale.tight} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      }
    },
    "1100": {
      "relaxed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1100}*{lineHeightScale.relaxed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "comfortable": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1100}*{lineHeightScale.comfortable} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "compressed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1100}*{lineHeightScale.compressed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "tight": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1100}*{lineHeightScale.tight} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      }
    },
    "1200": {
      "relaxed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1200}*{lineHeightScale.relaxed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "comfortable": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1200}*{lineHeightScale.comfortable} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "compressed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1200}*{lineHeightScale.compressed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "tight": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1200}*{lineHeightScale.tight} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      }
    },
    "1300": {
      "relaxed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1300}*{lineHeightScale.relaxed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "comfortable": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1300}*{lineHeightScale.comfortable} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "compressed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1300}*{lineHeightScale.compressed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "tight": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1300}*{lineHeightScale.tight} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      }
    },
    "1400": {
      "relaxed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1400}*{lineHeightScale.relaxed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "comfortable": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1400}*{lineHeightScale.comfortable} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "compressed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1400}*{lineHeightScale.compressed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "tight": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1400}*{lineHeightScale.tight} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      }
    },
    "1500": {
      "relaxed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1500}*{lineHeightScale.relaxed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "comfortable": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1500}*{lineHeightScale.comfortable} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "compressed": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1500}*{lineHeightScale.compressed} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      },
      "tight": {
        "value": "{layoutConstants.roundingUnit} * ceil( {fontSize.1500}*{lineHeightScale.tight} / {layoutConstants.roundingUnit} )",
        "type": "lineHeights"
      }
    }
  }
}